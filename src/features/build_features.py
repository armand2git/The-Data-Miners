# -*- coding: utf-8 -*-
"""make_dataset.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BUMDZuf6bFyNmLwxASwInYQsN67uSgQ1
"""

from google.colab import drive
drive.mount('/content/drive/')

import pandas as pd

sonar_measures = pd.read_csv('/content/drive/MyDrive/TAED2/The-Technical-Debt-Dataset-CSV/SONAR_MEASURES.csv')
sonar_measures.head()

sonar_issues = pd.read_csv('/content/drive/MyDrive/TAED2/The-Technical-Debt-Dataset-CSV/SONAR_ISSUES.csv')
sonar_issues.head()

sonar_measures = sonar_measures.iloc[:,[0,1,2,3,84,85,86,87,98,99,100,101,102,103,111,119,128,129,130,131,145,147,149,152,154,156,158,160,161,163,164,165,166,168,170,171]]
sonar_measures

sonar_issues = sonar_issues.iloc[:,[1,2,3,5,7,9,11,12,13,17,18]]
sonar_issues

# the 77.96% of the sonar issues are closed, then we can get the needed fixing time per closed sonar issue.
sum(sonar_issues['RESOLUTION'] == "FIXED")/sonar_issues['RESOLUTION'].size

sonar_issues_fixed = sonar_issues[sonar_issues['RESOLUTION'] == "FIXED"]
sonar_issues_fixed

import numpy as np
from datetime import datetime

a = [datetime.strptime(date,'%Y-%m-%d %H:%M:%S') for date in sonar_issues_fixed['CLOSE_DATE']]
b = [datetime.strptime(date,'%Y-%m-%d %H:%M:%S') for date in sonar_issues_fixed['CREATION_DATE']]

sonar_issues_fixed['FIXING_TIME'] = np.array(a)-np.array(b)
sonar_issues_fixed

sonar_issues_fixed = sonar_issues_fixed.iloc[:,[0,1,2,3,4,5,8,9,10,11]]
sonar_issues_fixed

import matplotlib.pyplot as plt
plt.hist(sonar_issues_fixed['FIXING_TIME'].astype('timedelta64[s]')/86400, bins = 100)
plt.title('Fixing Time attribute Histogram')
plt.xlabel('Fixing Time (days)')
plt.ylabel('Frequency')
plt.show()

sum(sonar_issues_fixed['DEBT'].isna())/sonar_issues_fixed['DEBT'].size

sonar_issues_fixed = sonar_issues_fixed[sonar_issues_fixed['DEBT'].notna()]
sonar_issues_fixed

sum(sonar_issues_fixed['END_OFFSET'].isna())/sonar_issues_fixed['DEBT'].size

sonar_issues_fixed = sonar_issues_fixed[sonar_issues_fixed['END_OFFSET'].notna()]
sonar_issues_fixed

sonar_issues_fixed.to_csv('/content/drive/MyDrive/TAED2/sonar_issues_fixed.csv',index = False, header=True)

sum(sonar_measures['complexity'].isna())

sonar_measures = sonar_measures[sonar_measures['complexity'].notna()]
sonar_measures

sum(sonar_measures['new_sqale_debt_ratio'].isna())

sonar_measures = sonar_measures[sonar_measures['new_sqale_debt_ratio'].notna()]
sonar_measures

(1-66679/66711)*100

sonar_measures.to_csv('/content/drive/MyDrive/TAED2/new_sonar_measures.csv',index = False, header=True)

